;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 03/06/2023 23:56:19
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF5D  	GOTO        186
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xF000EF47  	GOTO        142
_ConfigTIMER1:
;LedBlinking.c,67 :: 		void ConfigTIMER1(){
;LedBlinking.c,72 :: 		T1CON = 0B10110001;
0x001C	0x0EB1      	MOVLW       177
0x001E	0x6ECD      	MOVWF       T1CON 
;LedBlinking.c,73 :: 		TMR1H = 0X0B;   // carga do valor inicial
0x0020	0x0E0B      	MOVLW       11
0x0022	0x6ECF      	MOVWF       TMR1H 
;LedBlinking.c,74 :: 		TMR1L = 0XDC;
0x0024	0x0EDC      	MOVLW       220
0x0026	0x6ECE      	MOVWF       TMR1L 
;LedBlinking.c,76 :: 		PIR1.TMR1IF = 0;  //zera o Flag
0x0028	0x909E      	BCF         PIR1, 0 
;LedBlinking.c,77 :: 		T1CON.TMR1ON = 1;   //Liga o TIMER1
0x002A	0x80CD      	BSF         T1CON, 0 
;LedBlinking.c,79 :: 		T0CON.TMR0ON = 0;  //Desliga o TIMER0
0x002C	0x9ED5      	BCF         T0CON, 7 
;LedBlinking.c,80 :: 		}
L_end_ConfigTIMER1:
0x002E	0x0012      	RETURN      0
; end of _ConfigTIMER1
_ConfigTIMER0:
;LedBlinking.c,54 :: 		void ConfigTIMER0(){
;LedBlinking.c,57 :: 		T0CON = 0B00000100;  //TIMER_OFF, MOD_16BITS, TIMER, PRES_1:32
0x0030	0x0E04      	MOVLW       4
0x0032	0x6ED5      	MOVWF       T0CON 
;LedBlinking.c,58 :: 		TMR0H = 0X0B;   // carga do valor inicial
0x0034	0x0E0B      	MOVLW       11
0x0036	0x6ED7      	MOVWF       TMR0H 
;LedBlinking.c,59 :: 		TMR0L = 0XDC;
0x0038	0x0EDC      	MOVLW       220
0x003A	0x6ED6      	MOVWF       TMR0L 
;LedBlinking.c,61 :: 		INTCON.TMR0IF = 0;  //zera o Flag
0x003C	0x94F2      	BCF         INTCON, 2 
;LedBlinking.c,62 :: 		T0CON.TMR0ON = 1;   //Liga o TIMER0
0x003E	0x8ED5      	BSF         T0CON, 7 
;LedBlinking.c,64 :: 		T1CON.TMR1ON = 0;  //Desliga o TIMER1
0x0040	0x90CD      	BCF         T1CON, 0 
;LedBlinking.c,65 :: 		}
L_end_ConfigTIMER0:
0x0042	0x0012      	RETURN      0
; end of _ConfigTIMER0
_ConfigMCU:
;LedBlinking.c,4 :: 		void ConfigMCU(){
;LedBlinking.c,10 :: 		ADCON1 |= 0X0F; //P18F4550
0x0044	0x0E0F      	MOVLW       15
0x0046	0x12C1      	IORWF       ADCON1, 1 
;LedBlinking.c,13 :: 		TRISD = 0;       //Configurar os pinos de controle dos LEDs
0x0048	0x6A95      	CLRF        TRISD 
;LedBlinking.c,14 :: 		PORTD = 0;
0x004A	0x6A83      	CLRF        PORTD 
;LedBlinking.c,16 :: 		INTCON.TMR0IF = 0; //Flag TIMER0 zerada
0x004C	0x94F2      	BCF         INTCON, 2 
;LedBlinking.c,17 :: 		PIR1.TMR1IF = 0;  //zera a Flag TIMER1
0x004E	0x909E      	BCF         PIR1, 0 
;LedBlinking.c,20 :: 		TRISB.RB0 = 1;      //pino RB0 como entrada (botao)
0x0050	0x8093      	BSF         TRISB, 0 
;LedBlinking.c,21 :: 		TRISB.RB1 = 1;      //pino RB1 como entrada (botao)
0x0052	0x8293      	BSF         TRISB, 1 
;LedBlinking.c,22 :: 		TRISB.RB2 = 1;
0x0054	0x8493      	BSF         TRISB, 2 
;LedBlinking.c,24 :: 		TRISD.RD0 = 0;      //pino RD0 como saida
0x0056	0x9095      	BCF         TRISD, 0 
;LedBlinking.c,25 :: 		TRISD.RD1 = 0;
0x0058	0x9295      	BCF         TRISD, 1 
;LedBlinking.c,26 :: 		TRISD.RD2 = 0;
0x005A	0x9495      	BCF         TRISD, 2 
;LedBlinking.c,27 :: 		TRISD.RD3 = 0;
0x005C	0x9695      	BCF         TRISD, 3 
;LedBlinking.c,30 :: 		PORTD.RD0 = 0;      //LEDs inicialmente apagados
0x005E	0x9083      	BCF         PORTD, 0 
;LedBlinking.c,31 :: 		PORTD.RD1 = 0;
0x0060	0x9283      	BCF         PORTD, 1 
;LedBlinking.c,32 :: 		PORTD.RD2 = 0;
0x0062	0x9483      	BCF         PORTD, 2 
;LedBlinking.c,33 :: 		PORTD.RD3 = 0;
0x0064	0x9683      	BCF         PORTD, 3 
;LedBlinking.c,35 :: 		RCON.IPEN = 1; //DOIS NIVEIS DE PRIORIDADE HABILITADOS
0x0066	0x8ED0      	BSF         RCON, 7 
;LedBlinking.c,36 :: 		INTCON.GIEL = 1;// interrupt prioridade baixa habilitada
0x0068	0x8CF2      	BSF         INTCON, 6 
;LedBlinking.c,37 :: 		INTCON.GIEH = 1;// interrupt prioridade alta habilitada
0x006A	0x8EF2      	BSF         INTCON, 7 
;LedBlinking.c,40 :: 		INTCON2.TMR0IP = 0; // prioridade baixa para os timers
0x006C	0x94F1      	BCF         INTCON2, 2 
;LedBlinking.c,41 :: 		IPR1.TMR1IP = 0;
0x006E	0x909F      	BCF         IPR1, 0 
;LedBlinking.c,43 :: 		INTCON3.INT1IF = 0; //Clear flags
0x0070	0x90F0      	BCF         INTCON3, 0 
;LedBlinking.c,44 :: 		INTCON3.INT2IF = 0;
0x0072	0x92F0      	BCF         INTCON3, 1 
;LedBlinking.c,46 :: 		INTCON3.INT1IE = 1; //Habilita a interrup??o INT1/RB1
0x0074	0x86F0      	BSF         INTCON3, 3 
;LedBlinking.c,47 :: 		INTCON3.INT2IE = 1; //Habilita a interrup??o INT2/RB2
0x0076	0x88F0      	BSF         INTCON3, 4 
;LedBlinking.c,50 :: 		INTCON2.INTEDG1 = 1; //borda de subida no RB1 e RB2
0x0078	0x8AF1      	BSF         INTCON2, 5 
;LedBlinking.c,51 :: 		INTCON2.INTEDG2 = 1;
0x007A	0x88F1      	BSF         INTCON2, 4 
;LedBlinking.c,52 :: 		}
L_end_ConfigMCU:
0x007C	0x0012      	RETURN      0
; end of _ConfigMCU
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x007E	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0080	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0084	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0086	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0088	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x008A	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x008C	0x0012      	RETURN      0
; end of ___CC2DW
_Interrupt_botao:
0x008E	0x6E15      	MOVWF       ___Low_saveWREG 
0x0090	0xF016CFD8  	MOVFF       STATUS, ___Low_saveSTATUS
0x0094	0xF017CFE0  	MOVFF       BSR, ___Low_saveBSR
;LedBlinking.c,83 :: 		void Interrupt_botao() iv 0x0018 ics ICS_AUTO { //alta prioridade
;LedBlinking.c,85 :: 		num_bcd = 0; //zerar o numero do 7segmentos
0x0098	0x6A18      	CLRF        _num_bcd 
0x009A	0x6A19      	CLRF        _num_bcd+1 
;LedBlinking.c,88 :: 		if (INTCON3.INT2IF == 1){  //Interrupt 1s acionada
0x009C	0xA2F0      	BTFSS       INTCON3, 1 
0x009E	0xD002      	BRA         L_Interrupt_botao0
;LedBlinking.c,90 :: 		INTCON3.INT2IF = 0; //zera flag
0x00A0	0x92F0      	BCF         INTCON3, 1 
;LedBlinking.c,91 :: 		ConfigTIMER0();
0x00A2	0xDFC6      	RCALL       _ConfigTIMER0
;LedBlinking.c,92 :: 		}
L_Interrupt_botao0:
;LedBlinking.c,94 :: 		if (INTCON3.INT1IF == 1){  //Interrupt 250ms acionada
0x00A4	0xA0F0      	BTFSS       INTCON3, 0 
0x00A6	0xD002      	BRA         L_Interrupt_botao1
;LedBlinking.c,96 :: 		INTCON3.INT1IF = 0; //zera flag
0x00A8	0x90F0      	BCF         INTCON3, 0 
;LedBlinking.c,97 :: 		ConfigTIMER1(); //aciona Timer
0x00AA	0xDFB8      	RCALL       _ConfigTIMER1
;LedBlinking.c,98 :: 		}
L_Interrupt_botao1:
;LedBlinking.c,101 :: 		}       // Fim do atendimento da interrupcao
L_end_Interrupt_botao:
L__Interrupt_botao24:
0x00AC	0x5017      	MOVF        ___Low_saveBSR, 0 
0x00AE	0x6EE0      	MOVWF       BSR 
0x00B0	0x5016      	MOVF        ___Low_saveSTATUS, 0 
0x00B2	0x6ED8      	MOVWF       STATUS 
0x00B4	0x3A15      	SWAPF       ___Low_saveWREG, 1 
0x00B6	0x3815      	SWAPF       ___Low_saveWREG, 0 
0x00B8	0x0010      	RETFIE      0
; end of _Interrupt_botao
_main:
0x00BA	0x6A18      	CLRF        _num_bcd 
0x00BC	0x6A19      	CLRF        25 
;LedBlinking.c,103 :: 		void main() {
;LedBlinking.c,105 :: 		ConfigMCU();
0x00BE	0xDFC2      	RCALL       _ConfigMCU
;LedBlinking.c,107 :: 		while(1){
L_main2:
;LedBlinking.c,109 :: 		if(PIR1.TMR1IF == 1){
0x00C0	0xA09E      	BTFSS       PIR1, 0 
0x00C2	0xD00E      	BRA         L_main4
;LedBlinking.c,111 :: 		if(num_bcd >= 9){
0x00C4	0x0E80      	MOVLW       128
0x00C6	0x1819      	XORWF       _num_bcd+1, 0 
0x00C8	0x6E00      	MOVWF       R0 
0x00CA	0x0E80      	MOVLW       128
0x00CC	0x5C00      	SUBWF       R0, 0 
0x00CE	0xE102      	BNZ         L__main26
0x00D0	0x0E09      	MOVLW       9
0x00D2	0x5C18      	SUBWF       _num_bcd, 0 
L__main26:
0x00D4	0xE302      	BNC         L_main5
;LedBlinking.c,112 :: 		num_bcd = 0;
0x00D6	0x6A18      	CLRF        _num_bcd 
0x00D8	0x6A19      	CLRF        _num_bcd+1 
;LedBlinking.c,113 :: 		}
L_main5:
;LedBlinking.c,114 :: 		num_bcd += 1;
0x00DA	0x4A18      	INFSNZ      _num_bcd, 1 
0x00DC	0x2A19      	INCF        _num_bcd+1, 1 
;LedBlinking.c,115 :: 		ConfigTIMER1(); // Recarrega o TIMER1
0x00DE	0xDF9E      	RCALL       _ConfigTIMER1
;LedBlinking.c,116 :: 		}
L_main4:
;LedBlinking.c,118 :: 		if(INTCON.TMR0IF == 1){
0x00E0	0xA4F2      	BTFSS       INTCON, 2 
0x00E2	0xD00E      	BRA         L_main6
;LedBlinking.c,119 :: 		if(num_bcd >= 9){
0x00E4	0x0E80      	MOVLW       128
0x00E6	0x1819      	XORWF       _num_bcd+1, 0 
0x00E8	0x6E00      	MOVWF       R0 
0x00EA	0x0E80      	MOVLW       128
0x00EC	0x5C00      	SUBWF       R0, 0 
0x00EE	0xE102      	BNZ         L__main27
0x00F0	0x0E09      	MOVLW       9
0x00F2	0x5C18      	SUBWF       _num_bcd, 0 
L__main27:
0x00F4	0xE302      	BNC         L_main7
;LedBlinking.c,120 :: 		num_bcd = 0;
0x00F6	0x6A18      	CLRF        _num_bcd 
0x00F8	0x6A19      	CLRF        _num_bcd+1 
;LedBlinking.c,121 :: 		}
L_main7:
;LedBlinking.c,122 :: 		num_bcd += 1;
0x00FA	0x4A18      	INFSNZ      _num_bcd, 1 
0x00FC	0x2A19      	INCF        _num_bcd+1, 1 
;LedBlinking.c,123 :: 		ConfigTIMER0(); // Recarrega o TIMER0
0x00FE	0xDF98      	RCALL       _ConfigTIMER0
;LedBlinking.c,124 :: 		}
L_main6:
;LedBlinking.c,126 :: 		switch (num_bcd) { //0b0000_RD3_RD2_RD1_RD0
0x0100	0xD01E      	BRA         L_main8
;LedBlinking.c,128 :: 		case 0:{  PORTD = 0b1111110; break; }
L_main10:
0x0102	0x0E7E      	MOVLW       126
0x0104	0x6E83      	MOVWF       PORTD 
0x0106	0xD057      	BRA         L_main9
;LedBlinking.c,129 :: 		case 1:{  PORTD = 0b0110000; break; }
L_main11:
0x0108	0x0E30      	MOVLW       48
0x010A	0x6E83      	MOVWF       PORTD 
0x010C	0xD054      	BRA         L_main9
;LedBlinking.c,130 :: 		case 2:{  PORTD = 0b1101101; break; }
L_main12:
0x010E	0x0E6D      	MOVLW       109
0x0110	0x6E83      	MOVWF       PORTD 
0x0112	0xD051      	BRA         L_main9
;LedBlinking.c,131 :: 		case 3:{  PORTD = 0b1111001; break; }
L_main13:
0x0114	0x0E79      	MOVLW       121
0x0116	0x6E83      	MOVWF       PORTD 
0x0118	0xD04E      	BRA         L_main9
;LedBlinking.c,132 :: 		case 4:{  PORTD = 0b0110011; break; }
L_main14:
0x011A	0x0E33      	MOVLW       51
0x011C	0x6E83      	MOVWF       PORTD 
0x011E	0xD04B      	BRA         L_main9
;LedBlinking.c,133 :: 		case 5:{  PORTD = 0b1011011; break; }
L_main15:
0x0120	0x0E5B      	MOVLW       91
0x0122	0x6E83      	MOVWF       PORTD 
0x0124	0xD048      	BRA         L_main9
;LedBlinking.c,134 :: 		case 6:{  PORTD = 0b1011111; break; }
L_main16:
0x0126	0x0E5F      	MOVLW       95
0x0128	0x6E83      	MOVWF       PORTD 
0x012A	0xD045      	BRA         L_main9
;LedBlinking.c,135 :: 		case 7:{  PORTD = 0b1110000; break; }
L_main17:
0x012C	0x0E70      	MOVLW       112
0x012E	0x6E83      	MOVWF       PORTD 
0x0130	0xD042      	BRA         L_main9
;LedBlinking.c,136 :: 		case 8:{  PORTD = 0b1111111; break; }
L_main18:
0x0132	0x0E7F      	MOVLW       127
0x0134	0x6E83      	MOVWF       PORTD 
0x0136	0xD03F      	BRA         L_main9
;LedBlinking.c,137 :: 		case 9:{  PORTD = 0b1111011; break; }
L_main19:
0x0138	0x0E7B      	MOVLW       123
0x013A	0x6E83      	MOVWF       PORTD 
0x013C	0xD03C      	BRA         L_main9
;LedBlinking.c,138 :: 		}
L_main8:
0x013E	0x0E00      	MOVLW       0
0x0140	0x1819      	XORWF       _num_bcd+1, 0 
0x0142	0xE102      	BNZ         L__main28
0x0144	0x0E00      	MOVLW       0
0x0146	0x1818      	XORWF       _num_bcd, 0 
L__main28:
0x0148	0xE0DC      	BZ          L_main10
0x014A	0x0E00      	MOVLW       0
0x014C	0x1819      	XORWF       _num_bcd+1, 0 
0x014E	0xE102      	BNZ         L__main29
0x0150	0x0E01      	MOVLW       1
0x0152	0x1818      	XORWF       _num_bcd, 0 
L__main29:
0x0154	0xE0D9      	BZ          L_main11
0x0156	0x0E00      	MOVLW       0
0x0158	0x1819      	XORWF       _num_bcd+1, 0 
0x015A	0xE102      	BNZ         L__main30
0x015C	0x0E02      	MOVLW       2
0x015E	0x1818      	XORWF       _num_bcd, 0 
L__main30:
0x0160	0xE0D6      	BZ          L_main12
0x0162	0x0E00      	MOVLW       0
0x0164	0x1819      	XORWF       _num_bcd+1, 0 
0x0166	0xE102      	BNZ         L__main31
0x0168	0x0E03      	MOVLW       3
0x016A	0x1818      	XORWF       _num_bcd, 0 
L__main31:
0x016C	0xE0D3      	BZ          L_main13
0x016E	0x0E00      	MOVLW       0
0x0170	0x1819      	XORWF       _num_bcd+1, 0 
0x0172	0xE102      	BNZ         L__main32
0x0174	0x0E04      	MOVLW       4
0x0176	0x1818      	XORWF       _num_bcd, 0 
L__main32:
0x0178	0xE0D0      	BZ          L_main14
0x017A	0x0E00      	MOVLW       0
0x017C	0x1819      	XORWF       _num_bcd+1, 0 
0x017E	0xE102      	BNZ         L__main33
0x0180	0x0E05      	MOVLW       5
0x0182	0x1818      	XORWF       _num_bcd, 0 
L__main33:
0x0184	0xE0CD      	BZ          L_main15
0x0186	0x0E00      	MOVLW       0
0x0188	0x1819      	XORWF       _num_bcd+1, 0 
0x018A	0xE102      	BNZ         L__main34
0x018C	0x0E06      	MOVLW       6
0x018E	0x1818      	XORWF       _num_bcd, 0 
L__main34:
0x0190	0xE0CA      	BZ          L_main16
0x0192	0x0E00      	MOVLW       0
0x0194	0x1819      	XORWF       _num_bcd+1, 0 
0x0196	0xE102      	BNZ         L__main35
0x0198	0x0E07      	MOVLW       7
0x019A	0x1818      	XORWF       _num_bcd, 0 
L__main35:
0x019C	0xE0C7      	BZ          L_main17
0x019E	0x0E00      	MOVLW       0
0x01A0	0x1819      	XORWF       _num_bcd+1, 0 
0x01A2	0xE102      	BNZ         L__main36
0x01A4	0x0E08      	MOVLW       8
0x01A6	0x1818      	XORWF       _num_bcd, 0 
L__main36:
0x01A8	0xE0C4      	BZ          L_main18
0x01AA	0x0E00      	MOVLW       0
0x01AC	0x1819      	XORWF       _num_bcd+1, 0 
0x01AE	0xE102      	BNZ         L__main37
0x01B0	0x0E09      	MOVLW       9
0x01B2	0x1818      	XORWF       _num_bcd, 0 
L__main37:
0x01B4	0xE0C1      	BZ          L_main19
L_main9:
;LedBlinking.c,140 :: 		};
0x01B6	0xD784      	BRA         L_main2
;LedBlinking.c,141 :: 		}
L_end_main:
0x01B8	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [20]    _ConfigTIMER1
0x0030      [20]    _ConfigTIMER0
0x0044      [58]    _ConfigMCU
0x007E      [16]    ___CC2DW
0x008E      [44]    _Interrupt_botao
0x00BA     [256]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    ___Low_saveWREG
0x0016       [1]    ___Low_saveSTATUS
0x0017       [1]    ___Low_saveBSR
0x0018       [2]    _num_bcd
0x0F83       [1]    PORTD
0x0F93       [1]    TRISB
0x0F95       [1]    TRISD
0x0F9E       [1]    PIR1
0x0F9F       [1]    IPR1
0x0FC1       [1]    ADCON1
0x0FCD       [1]    T1CON
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [1]    RCON
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF0       [1]    INTCON3
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
